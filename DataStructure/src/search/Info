查找算法

常见查找算法:
1) 顺序(线性)查找
2) 二分查找/折半查找
3) 插值查找
4) 斐波那契查找

1.这里不对线性查找方式进行实现...

2.二分查找方式:
    1) 要求查询的序列为有序序列
    2) 如何实现多重查找? -> 记录查询到的元素的位置，从下一个元素开始继续寻找
        -> 将返回值一开始设为-1,查询过程之中,若查询到对应元素，则返回坐标值
        -> 若index不为-1，则存在该元素
        -> 从index+1 ~ array.length-1继续进行查找 (别忘了初始化index 为-1  -> 先将index值存储)

3.插值查找算法    -> BinarySearchPlus
    1) 二分查找方式仍存在对于边界的值的查询需要多次寻找的情况
    2) 这里使用一种更加优良的方案进行处理
       int mid = (left+right)/2 = left + (right-left)/2;
     =>int mid = left + (key-array[left])/(array[right]-array[left])*(right-left)
附: 注意，此种方法下，temp(key)的值不可以太离谱了 晕
    ->  进一步处理