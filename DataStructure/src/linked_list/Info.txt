链表结构的学习

1.在SingleLinkedList中学习使用带头结点的单链表结构:
  ① 完成对水浒英雄的增删改查操作
  ② 添加:[1] 之接添加到链表的尾部
         [2] 根据排名将应许插入到指定位置(若存在这个排名，则添加失败)
  附：这里由于添加过程中[1]和[2]会存在矛盾冲突,故仅采取第二种添加方式



2.单链表完成水浒英雄总结:
  ① 在初始化单链表的时候，可以将头结点设为链表的一个内部属性，在构造器中完成对first和last指针的修改!

  ② 在进行按排序插入之前，实现尾插法可以有效缩减代码
     [1] 收先判断是否为空链表         -> 直接尾插
     [2] 从头结点的下一个节点开始遍历  -> 直到temp.getNext() == null为止
     [3] 使用获取下一个节点的方式:
         即：temp.getNext().getData ? s.getData ... 进行数据判断    (可以有效避免单链表的局限性)

  ③单链表的toString()方法可能将next直接打印出来!

  以上：相关文件：(全部位于test1包中)
       SingleLinkedList、SingleLikedListNode、SingleLinkedListTest


3.直接按照老鲍的方式将单链表的所有结构构建出来！   鲍松山yyds!
(1)初始化链表、尾插、尾删、头插、头删、遍历、查找、有效长度、随机插入、排序、逆序、清空、摧毁、判空
(2)单链表的常见面试题有如下:
    1)求单链表中有效节点的个数
    2)查找单链表中的倒数第k个结点【新浪面试题】
    3)单链表的反转【腾讯面试题，有点难度】
    4)从尾到头打印单链表【百度，要求方式1:反向遍历。方式2: Stack栈】
    5)合并两个有序的单链表，合并之后的链表依然有序【课后练习.】

附:[1] 在SingleLinkedList中对单链表中的所有功能进行实现
   [2] 泛型如何实现比大小?  在结点实现Comparable接口?   在泛型中使用<T extends Comparable>    ※